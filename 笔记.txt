1. vue相对于react，使用起来会更简单，vuex,vue router都是官方在维护，比react第三方维护要好很多，学习核心实用方法
2. 配置开发时前端工程
3. webpack优化配置,网络优化，减少http请求，压缩静态资源文件，实用浏览器的长缓存让应用的流量变小，加快加载速度。

前端的价值：
学习一门技术，考虑工程化问题，
1. 搭建前端工程
2. 网络优化 http的理解，缓存http请求
3. API定制，前后端分离之后，与后端的交流借助于api接口
4. nodejs层 前端工程的搭建，基本上都是围绕nodejs, webpack, grunt, gulp 工具都是在nodejs环境中去运行
很多公司在前端和后端的api层之间加一个node js层，用node做转发或数据处理。

实用vue-cli生成的项目，没有办法直接投入到生产环境中，它是一个广泛适用的模板，不同的项目有不同的定制需求，vue-cli是基于webpack的前端工程。

webpack 打包前端资源
vscode 打开命令行 ctrl+`
